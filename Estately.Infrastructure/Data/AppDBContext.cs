// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
namespace Estately.Infrastructure.Data
{
    public partial class AppDBContext : DbContext
    {
        public AppDBContext()
        {

        }

        public AppDBContext(DbContextOptions<AppDBContext> options)
            : base(options)
        {

        }

        public virtual DbSet<TblAppointment> TblAppointments { get; set; }

        public virtual DbSet<TblBranch> TblBranches { get; set; }

        public virtual DbSet<TblCity> TblCities { get; set; }

        public virtual DbSet<TblClientProfile> TblClientProfiles { get; set; }

        public virtual DbSet<TblCommission> TblCommissions { get; set; }

        public virtual DbSet<TblDepartment> TblDepartments { get; set; }

        public virtual DbSet<TblDeveloperProfile> TblDeveloperProfiles { get; set; }

        public virtual DbSet<TblEmployee> TblEmployees { get; set; }

        public virtual DbSet<TblEmployeeClient> TblEmployeeClients { get; set; }

        public virtual DbSet<TblFavorite> TblFavorites { get; set; }

        public virtual DbSet<TblPayment> TblPayments { get; set; }

        public virtual DbSet<TblProperty> TblProperties { get; set; }

        public virtual DbSet<TblPropertyFeature> TblPropertyFeatures { get; set; }

        public virtual DbSet<TblPropertyFeaturesMapping> TblPropertyFeaturesMappings { get; set; }

        public virtual DbSet<TblPropertyImage> TblPropertyImages { get; set; }

        public virtual DbSet<TblPropertyType> TblPropertyTypes { get; set; }

        public virtual DbSet<TblTransaction> TblTransactions { get; set; }

        public virtual DbSet<TblUser> TblUsers { get; set; }

        public virtual DbSet<TblUserType> TblUserTypes { get; set; }

        public virtual DbSet<TblZone> TblZones { get; set; }

        //    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        //#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see https://go.microsoft.com/fwlink/?LinkId=723263.
        //        => optionsBuilder.UseSqlServer("Data Source=Yussif\\DEPI2025R3G2;Initial Catalog=EstatelyDB;Integrated Security=True");

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<TblAppointment>(entity =>
            {
                entity.HasKey(e => e.AppointmentID).HasName("PK__TblAppoi__8ECDFCA275387957");

                entity.Property(e => e.AppointmentID).ValueGeneratedNever();

                entity.HasOne(d => d.EmployeeClient).WithMany(p => p.TblAppointments)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__TblAppoin__Emplo__60A75C0F");

                entity.HasOne(d => d.Property).WithMany(p => p.TblAppointments)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__TblAppoin__Prope__5FB337D6");
            });

            modelBuilder.Entity<TblBranch>(entity =>
            {
                entity.HasKey(e => e.BranchID).HasName("PK__TblBranc__A1682FA5A8E522C6");

                entity.Property(e => e.BranchID).ValueGeneratedNever();
                entity.Property(e => e.IsDeleted).HasAnnotation("Relational:DefaultConstraintName", "DF__TblBranch__IsDel__4222D4EF");
                entity.Property(e => e.ManagerName).IsFixedLength();
            });

            modelBuilder.Entity<TblCity>(entity =>
            {
                entity.HasKey(e => e.CityID).HasName("PK__TblCitie__F2D21A96E8A07BFB");

                entity.Property(e => e.CityID).ValueGeneratedNever();
            });

            modelBuilder.Entity<TblClientProfile>(entity =>
            {
                entity.HasKey(e => e.ClientProfileID).HasName("PK__TblClien__08E21299A9C3CBD4");

                entity.Property(e => e.ClientProfileID).ValueGeneratedNever();
            });

            modelBuilder.Entity<TblCommission>(entity =>
            {
                entity.HasKey(e => e.CommissionID).HasName("PK__TblCommi__6C2C8CEC10E05868");

                entity.Property(e => e.CommissionID).ValueGeneratedNever();

                entity.HasOne(d => d.Transaction).WithMany(p => p.TblCommissions)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__TblCommis__Trans__68487DD7");
            });

            modelBuilder.Entity<TblDepartment>(entity =>
            {
                entity.HasKey(e => e.DepartmentID).HasName("PK__TblDepar__B2079BCDB61DCC09");

                entity.Property(e => e.DepartmentID).ValueGeneratedNever();
                entity.Property(e => e.ManagerName).IsFixedLength();

                entity.HasOne(d => d.Branch).WithMany(p => p.TblDepartments)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__TblDepart__Branc__44FF419A");
            });

            modelBuilder.Entity<TblDeveloperProfile>(entity =>
            {
                entity.HasKey(e => e.DeveloperProfileID).HasName("PK__TblDevel__E68C6097A852D99A");

                entity.Property(e => e.DeveloperProfileID).ValueGeneratedNever();
                entity.Property(e => e.Phone).IsFixedLength();
            });

            modelBuilder.Entity<TblEmployee>(entity =>
            {
                entity.HasKey(e => e.EmployeeID).HasName("PK__TblEmplo__7AD04FF1E060C10B");

                entity.Property(e => e.EmployeeID).ValueGeneratedNever();
                entity.Property(e => e.HireDate)
                    .HasDefaultValueSql("(getdate())")
                    .HasAnnotation("Relational:DefaultConstraintName", "DF__TblEmploy__HireD__47DBAE45");
                entity.Property(e => e.Phone).IsFixedLength();
                entity.Property(e => e.isActive)
                    .HasDefaultValue(true)
                    .HasAnnotation("Relational:DefaultConstraintName", "DF_TblEmployees_isActive");

                entity.HasOne(d => d.Department).WithMany(p => p.TblEmployees)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__TblEmploy__Depar__4AB81AF0");

                entity.HasOne(d => d.User).WithOne(p => p.TblEmployee)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_TblEmployees_TblUsers");
            });

            modelBuilder.Entity<TblEmployeeClient>(entity =>
            {
                entity.HasKey(e => e.EmployeeClientID).HasName("PK__TblEmplo__E03DEBF96B802101");

                entity.Property(e => e.EmployeeClientID).ValueGeneratedNever();
                entity.Property(e => e.AssignmentDate)
                    .HasDefaultValueSql("(getdate())")
                    .HasAnnotation("Relational:DefaultConstraintName", "DF__TblEmploy__Assig__4D94879B");

                entity.HasOne(d => d.ClientProfile).WithMany(p => p.TblEmployeeClients)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__TblEmploy__Clien__4F7CD00D");

                entity.HasOne(d => d.Employee).WithMany(p => p.TblEmployeeClients)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__TblEmploy__Emplo__4E88ABD4");
            });

            modelBuilder.Entity<TblFavorite>(entity =>
            {
                entity.HasKey(e => e.FavoriteID).HasName("PK__TblFavor__CE74FAF56F3AD77B");

                entity.Property(e => e.FavoriteID).ValueGeneratedNever();
                entity.Property(e => e.CreatedAt)
                    .HasDefaultValueSql("(getdate())")
                    .HasAnnotation("Relational:DefaultConstraintName", "DF__TblFavori__Creat__6E01572D");
                entity.Property(e => e.IsDeleted).HasAnnotation("Relational:DefaultConstraintName", "DF__TblFavori__IsDel__6EF57B66");

                entity.HasOne(d => d.ClientProfile).WithMany(p => p.TblFavorites)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__TblFavori__Clien__6FE99F9F");

                entity.HasOne(d => d.Property).WithMany(p => p.TblFavorites)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__TblFavori__Prope__70DDC3D8");
            });

            modelBuilder.Entity<TblPayment>(entity =>
            {
                entity.HasKey(e => e.PaymentID).HasName("PK__TblPayme__9B556A5804FBFB47");

                entity.Property(e => e.PaymentID).ValueGeneratedNever();

                entity.HasOne(d => d.Transaction).WithMany(p => p.TblPayments)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__TblPaymen__Trans__6B24EA82");
            });

            modelBuilder.Entity<TblProperty>(entity =>
            {
                entity.HasKey(e => e.PropertyID).HasName("PK__TblPrope__70C9A75597E3E0F9");

                entity.Property(e => e.PropertyID).ValueGeneratedNever();
                entity.Property(e => e.IsSold).HasAnnotation("Relational:DefaultConstraintName", "DF__TblProper__IsSol__59063A47");
                entity.Property(e => e.ListingDate)
                    .HasDefaultValueSql("(getdate())")
                    .HasAnnotation("Relational:DefaultConstraintName", "DF__TblProper__Listi__59FA5E80");

                entity.HasOne(d => d.DeveloperProfile).WithMany(p => p.TblProperties)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__TblProper__Devel__5CD6CB2B");

                entity.HasOne(d => d.PropertyType).WithMany(p => p.TblProperties)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__TblProper__Prope__5AEE82B9");

                entity.HasOne(d => d.Zone).WithMany(p => p.TblProperties)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__TblProper__ZoneI__5BE2A6F2");
            });

            modelBuilder.Entity<TblPropertyFeature>(entity =>
            {
                entity.HasKey(e => e.FeatureID).HasName("PK__TblPrope__82230A2918104D04");

                entity.Property(e => e.FeatureID).ValueGeneratedNever();
            });

            modelBuilder.Entity<TblPropertyFeaturesMapping>(entity =>
            {
                entity.HasKey(e => new { e.PropertyID, e.FeatureID }).HasName("PK__TblPrope__F8EB97F77671E858");

                entity.HasOne(d => d.Feature).WithMany(p => p.TblPropertyFeaturesMappings)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__TblProper__Featu__7A672E12");

                entity.HasOne(d => d.Property).WithMany(p => p.TblPropertyFeaturesMappings)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__TblProper__Prope__797309D9");
            });

            modelBuilder.Entity<TblPropertyImage>(entity =>
            {
                entity.HasKey(e => e.ImageID).HasName("PK__TblPrope__7516F4ECCA5F7C5D");

                entity.Property(e => e.ImageID).ValueGeneratedNever();
                entity.Property(e => e.UploadedDate)
                    .HasDefaultValueSql("(getdate())")
                    .HasAnnotation("Relational:DefaultConstraintName", "DF__TblProper__Uploa__73BA3083");

                entity.HasOne(d => d.Property).WithMany(p => p.TblPropertyImages)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__TblProper__Prope__74AE54BC");
            });

            modelBuilder.Entity<TblPropertyType>(entity =>
            {
                entity.HasKey(e => e.PropertyTypeID).HasName("PK__TblPrope__BDE14DD4CD5C75B6");

                entity.Property(e => e.PropertyTypeID).ValueGeneratedNever();
            });

            modelBuilder.Entity<TblTransaction>(entity =>
            {
                entity.HasKey(e => e.TransactionID).HasName("PK__TblTrans__55433A4BA729BFEA");

                entity.Property(e => e.TransactionID).ValueGeneratedNever();
                entity.Property(e => e.CreatedAt)
                    .HasDefaultValueSql("(getdate())")
                    .HasAnnotation("Relational:DefaultConstraintName", "DF__TblTransa__Creat__6383C8BA");

                entity.HasOne(d => d.EmployeeClient).WithMany(p => p.TblTransactions)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__TblTransa__Emplo__6477ECF3");

                entity.HasOne(d => d.Property).WithMany(p => p.TblTransactions)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__TblTransa__Prope__656C112C");
            });

            modelBuilder.Entity<TblUser>(entity =>
            {
                entity.HasKey(e => e.UserID).HasName("PK__TblUsers__1788CCAC37721CCD");

                entity.Property(e => e.UserID).ValueGeneratedNever();
                entity.Property(e => e.CreatedAt)
                    .HasDefaultValueSql("(getdate())")
                    .HasAnnotation("Relational:DefaultConstraintName", "DF__TblUsers__Create__398D8EEE");
                entity.Property(e => e.IsDeleted).HasAnnotation("Relational:DefaultConstraintName", "DF__TblUsers__IsDele__3A81B327");

                entity.HasOne(d => d.UserType).WithMany(p => p.TblUsers)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__TblUsers__UserTy__3B75D760");
            });

            modelBuilder.Entity<TblUserType>(entity =>
            {
                entity.HasKey(e => e.UserTypeID).HasName("PK__TblUserT__40D2D8F695A0D454");

                entity.Property(e => e.UserTypeID).ValueGeneratedNever();
            });

            modelBuilder.Entity<TblZone>(entity =>
            {
                entity.HasKey(e => e.ZoneID).HasName("PK__TblZones__601667951A211EFE");

                entity.Property(e => e.ZoneID).ValueGeneratedNever();

                entity.HasOne(d => d.City).WithMany(p => p.TblZones)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__TblZones__Name__5629CD9C");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}
